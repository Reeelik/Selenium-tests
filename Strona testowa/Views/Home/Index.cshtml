@{
    ViewData["Title"] = "Strona Główna";
}

<div class="text-center">
    <div class="blue-background" 
    style="
        float: left;
        width: 90%;
        height: 400px;
        background-image: url('@Url.Content("~/Content/a2.jpg")');
        background-size: cover; 
        background-position: center center; 
        background-repeat: no-repeat; 
        background-color: rgba(26, 60, 106, 0.5); 
        border-top-right-radius: 100px;
        border-bottom-right-radius: 100px;
    "></div>
    <div class="blue-background" 
    style="
        position: absolute;
        float: left;
        width: 1000px;
        height: 400px;
        background-color: rgba(26, 60, 106, 0.8); 
        border-top-right-radius: 100px;
        border-bottom-right-radius: 100px;
    ">
    <p style="font-size: 100px; color:white; margin-top:100px;">Strona Głowna</p>
    </div>
    <div class="overlay-div" style="
        position: absolute;
        width: 200px; 
        height: 200px; 
        background-color: rgba(26, 60, 106); 
        right: 400px;
        top: 170px;
        border-radius: 100px;
    "><br/><br/><a href="https://wiea.uz.zgora.pl"><img src="~/Content/logo-uz.png" width="100px" height="100px"/></a></div>
    <br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/>
    <h1>Opis wybranych testów</h1>
    <i>W testowaniu aplikacji internetowych istnieje wiele różnych typów testów, z których każdy odgrywa kluczową rolę w procesie automatyzacji testów. Każdy typ testu ma swoje unikalne cechy i cele, które będą omówione w dalszej części tej pracy. Każdy z tych typów testów spełnia istotną rolę w zapewnieniu jakości oprogramowania i weryfikacji jego zgodności z określonymi wymaganiami. W tej sekcji przedstawimy zwięzłe opisy oraz znaczenie każdego typu testu, aby zapewnić lepsze zrozumienie, jakie aspekty oprogramowania są poddawane testom i jakie aspekty są weryfikowane.
    <br/>
Zrozumienie różnych typów testów jest kluczowe, ponieważ pozwala to na właściwe dostosowanie strategii testowej do konkretnego projektu. Każdy rodzaj testu jest projektowany w taki sposób, aby skupić się na określonych aspektach jakości, co pozwala na lepsze zarządzanie ryzykiem i zapewnienie satysfakcji klienta.
   <br />
   Testy funkcjonalne to rodzaj testowania oprogramowania, którego celem jest ocena, czy system lub aplikacja działa zgodnie z określonymi wymaganiami funkcjonalnymi. W trakcie tych testów analizowane są funkcje i zachowania oprogramowania, aby upewnić się, że spełniają one oczekiwania użytkowników i założenia projektowe. Testy funkcjonalne to rodzaj testowania oprogramowania, które koncentruje się na ocenie, czy aplikacja lub system wykonuje konkretne funkcje i operacje zgodnie z wymaganiami biznesowymi lub specyfikacjami produktu. Testy te sprawdzają, czy oprogramowanie robi to, co ma robić, w sposób zdefiniowany w dokumentacji projektowej.
   <br />
   Testy niefunkcjonalne, nazywane także testami jakościowymi, to rodzaj testów oprogramowania, które oceniają aspekty jakościowe i charakterystyki wydajnościowe, niezwiązane bezpośrednio z funkcjonalnością aplikacji. Te testy koncentrują się na określonych właściwościach, takich jak wydajność, bezpieczeństwo, dostępność i inne, aby zapewnić, że oprogramowanie spełnia określone standardy i wymagania. 
   <br />
   Testy niefunkcjonalne są niezbędne dla zapewnienia, że oprogramowanie nie tylko działa poprawnie pod względem funkcjonalności, ale także spełnia oczekiwane standardy jakościowe i wydajnościowe. Dzięki tym testom można unikać potencjalnych ryzyk związanych z wydajnością, bezpieczeństwem, dostępnością i innymi aspektami, które mogą wpłynąć na zadowolenie użytkowników.
</i><br /><br /><br /><br />
<h1>Link do strony</h1>
    <p>Przejdź do strony Uniwersytetu Zielonogórskiego <a href="https://uz.zgora.pl">klikajac tutaj</a></p>
</div>
